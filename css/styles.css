/*
colors used

text color (dark dark green): #244914
primary color (dark green): #3e642e
visited link color (muted purple): #8b82a0
secondary color (green grey): #64745d
tertiary color (pink): #ce9a9e
quaternary color (dark pink): #a47b7e
grid background (light pink): #fce5e9

*/

:root {
    /* colors used */
    --darkerGreenText: #244914;
    --darkGreen: #3e642e;
    --lightPurpleVisited: #8b82a0;
    --greenGreyActive: #64745d;
    --pinkFocus: #ce9a9e;
    --darkPinkButtons: #a47b7e;
    --visitedButtonWhite: #f6f1f1;
    --gridBGpink: #fce5e9;
    --black: rgba(0,0,0,0.3);
    /* sun animation colors */
    --golden: #edc655;
    --yellow: #fcffad;
    --orange: #f76414;
    /* end sun animation colors */
    /* end colors used */
    --margin: 0 auto;
    --maxWidth: 700px;

}

body {
    font-family:'Gothic A1', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.6;
    color: var(--darkerGreenText);
}

h1 {
    font-size: 30px;
    font-weight: 700;
}

a {
    color: var(--darkGreen);
}

a:not(.button):visited {
    /* visited link */
    color: var(--lightPurpleVisited);
}

a:hover, a:focus {
    /* no underlining when hovering over link */
    text-decoration: none;
    color: var(--pinkFocus);
}

a.button:visited {
    color: var(--visitedButtonWhite);
}

a:active {
    /* selected link */
    color: var(--greenGreyActive);
}

button,
.button {
    border: none;
    display: inline-block;
    font-family: inherit;
    background-color: var(--darkPinkButtons);
    color: white;
    text-decoration: none;
    padding: 10px;
    border-radius: 3px;
    border-bottom: 2px solid var(--black);
    transition: opacity 0.2s;
}

button:hover, button:focus 
.button:hover, .button:focus {
    cursor: pointer;
    opacity: 0.8;
}

.profile__portrait {
    float: left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.profile {
    max-width: var(--maxWidth);
    margin: var(--margin);
}

.description {
    max-width: var(--maxWidth);
    margin: var(--margin);
}

.contact-page {
    max-width: var(--maxWidth);
    margin: var(--margin);
}

* {
    box-sizing: border-box;
}

.page-header {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 20px;
}

.page-header__logo {
    max-width: 400px;
    max-height: 300px;
}

.page-header__item {
    flex: 1 1 1;
}

.page-header__item :last-child {
    flex-grow: 1;
    text-align: right;
}

.navigation-list{
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
}
/* end grid fallback*/

@supports (display: grid) {
    .grid {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 20px;
        margin: 0;
    }

    .grid__item {
        background-color: var(--gridBGpink);
        padding: 10px;
        width: auto;
        min-height: auto;
        margin: 0;
    }

    .grid__item :last-child {
        grid-column: 3 / 3;
        grid-row: 1 / 3;
    }
}

@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
    }    
}

@media all and (min-width: 500px) and (max-width: 750px){
    .grid {
        grid-template-columns: 1fr 1fr;
    }
}

@media all and (max-width: 750px) {
    .grid {
        grid-gap: 10px;
    }
    .grid__item :last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }
    h1 {
        font-size: 22px;
    }
}

@keyframes color-change {
    0% {
        fill: var(--golden);
    }
    50% {
        fill: var(--yellow);
    }
    100% {
        fill: var(--orange);
    }
}

@keyframes cloud-move {
    from {
        transform: translate(0,50px);
    }
    to {
        transform: translate(200px, 50px);
    }
}
@keyframes cloud-move-reverse {
    from{
        transform: translate(446px, 48px);
    }
    to {
        transform: translate(100px, 48px);
    }
}

.sun {
    animation: 6s color-change infinite alternate linear;
}

.clouds {
    animation: 34s cloud-move-reverse infinite alternate linear;
}

@keyframes cab-move {
    from{
        transform: translate(0, 50px);
    }
    to {
        transform: translate(200px, 50px);
    }
}

.taxi {
    animation: 34s cab-move infinite alternate linear;
}

